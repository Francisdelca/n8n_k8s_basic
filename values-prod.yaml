# Configuraci√≥n de n8n para PRODUCCI√ìN (versi√≥n simplificada)
# Basada en tu configuraci√≥n actual pero con mejoras de seguridad

image:
  repository: n8nio/n8n
  pullPolicy: IfNotPresent
  tag: "latest" # √öltima versi√≥n estable

# Configuraci√≥n del ingress para dominio y SSL
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  className: "nginx"
  hosts:
    - host: "n8n.tudominio.com" # ¬°CAMBIA ESTO POR TU DOMINIO!
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - "n8n.tudominio.com" # ¬°CAMBIA ESTO POR TU DOMINIO!
      secretName: "n8n-tls-cert"

# Configuraci√≥n principal de n8n
main:
  # Configuraci√≥n de la base de datos PostgreSQL
  config:
    DB_TYPE: "postgresdb"
    DB_POSTGRESDB_HOST: "postgresql-service" # Servicio de PostgreSQL en K8s
    DB_POSTGRESDB_DATABASE: "n8n"
    DB_POSTGRESDB_USER: "n8n"
    DB_POSTGRESDB_PORT: "5432"
    DB_POSTGRESDB_SCHEMA: "public"
    
    # Configuraci√≥n de Redis
    REDIS_HOST: "redis-service" # Servicio de Redis en K8s
    REDIS_PORT: "6379"
    REDIS_DB: "0"
    
    # Configuraci√≥n del servidor (¬°CAMBIA EL DOMINIO!)
    GENERIC_HOST: "n8n.tudominio.com"
    N8N_HOST: "n8n.tudominio.com"
    N8N_PROTOCOL: "https"
    N8N_PORT: "443"
    N8N_WEBHOOK_URL: "https://n8n.tudominio.com/"
    
    # üîí CONFIGURACI√ìN DE SEGURIDAD OBLIGATORIA
    N8N_ENCRYPTION_KEY: "your-32-character-encryption-key-here" # ¬°CAMBIA ESTO!
    N8N_USER_MANAGEMENT_DISABLED: "false"
    N8N_BASIC_AUTH_ACTIVE: "true"
    N8N_BASIC_AUTH_USER: "admin" # ¬°CAMBIA ESTO!
    
    # Configuraci√≥n de logs para producci√≥n
    N8N_LOG_LEVEL: "info" # No debug en producci√≥n
    N8N_LOG_OUTPUT: "console"
    
    # Configuraci√≥n de ejecuci√≥n
    N8N_EXECUTIONS_MODE: "regular"
    N8N_EXECUTIONS_TIMEOUT: "3600"
    N8N_EXECUTIONS_TIMEOUT_MAX: "7200"

  # Secretos (se crear√°n como Kubernetes Secrets)
  secret:
    DB_POSTGRESDB_PASSWORD: "tu-password-postgres-seguro" # ¬°CAMBIA ESTO!
    REDIS_PASSWORD: "tu-password-redis-seguro" # ¬°CAMBIA ESTO!
    N8N_BASIC_AUTH_PASSWORD: "tu-password-admin-seguro" # ¬°CAMBIA ESTO!

  # Configuraci√≥n del servicio
  service:
    type: ClusterIP
    port: 5678

  # Persistencia para datos de n8n
  persistence:
    enabled: true
    type: dynamic
    storageClass: "fast-ssd" # ¬°CAMBIA ESTO POR TU STORAGE CLASS!
    accessModes:
      - ReadWriteOnce
    size: 50Gi # Tama√±o para producci√≥n

  # üîí RECURSOS OBLIGATORIOS para producci√≥n
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "2"
      memory: "4Gi"

  # üîí CONFIGURACI√ìN DE SEGURIDAD OBLIGATORIA
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

  # üîí HEALTH CHECKS OBLIGATORIOS para producci√≥n
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  # Estrategia de despliegue para producci√≥n
  deploymentStrategy:
    type: "RollingUpdate"
    maxSurge: "25%"
    maxUnavailable: "25%"

  # M√∫ltiples r√©plicas para alta disponibilidad
  replicaCount: 2

  # Autoscaling para producci√≥n
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Configuraci√≥n de Redis (Valkey) para producci√≥n
valkey:
  enabled: true
  architecture: standalone
  
  primary:
    persistence:
      enabled: true
      storageClass: "fast-ssd" # ¬°CAMBIA ESTO POR TU STORAGE CLASS!
      size: 10Gi
      accessModes:
        - ReadWriteOnce
    
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1Gi"

# üîí NOTAS CR√çTICAS PARA PRODUCCI√ìN:
# 
# 1. CAMBIAR OBLIGATORIAMENTE:
#    - n8n.tudominio.com ‚Üí Tu dominio real
#    - your-32-character-encryption-key-here ‚Üí Clave de 32 caracteres
#    - tu-password-postgres-seguro ‚Üí Contrase√±a PostgreSQL segura
#    - tu-password-redis-seguro ‚Üí Contrase√±a Redis segura
#    - tu-password-admin-seguro ‚Üí Contrase√±a de administrador
#    - fast-ssd ‚Üí Tu storage class de producci√≥n
#
# 2. REQUISITOS OBLIGATORIOS:
#    - cert-manager instalado
#    - nginx-ingress funcionando
#    - Dominio configurado en DNS
#    - PostgreSQL y Redis gestionados (no Docker local)
#
# 3. DIFERENCIAS CON TU CONFIGURACI√ìN ACTUAL:
#    - ‚úÖ SSL/TLS obligatorio
#    - ‚úÖ Autenticaci√≥n b√°sica habilitada
#    - ‚úÖ Clave de encriptaci√≥n configurada
#    - ‚úÖ Health checks robustos
#    - ‚úÖ Recursos limitados y requests
#    - ‚úÖ M√∫ltiples r√©plicas
#    - ‚úÖ Autoscaling
#    - ‚úÖ Logs en modo info (no debug)
